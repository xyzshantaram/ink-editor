{
  "version": 3,
  "sources": ["../src/utils/icons.ts", "../src/utils/misc.ts", "../src/InkEditor.ts", "../src/KeybindString.ts", "../src/utils/editor.ts", "../src/defaults.ts", "../src/components/SnippetView.ts", "../src/components/Toolbar.ts", "../src/components/EditorButton.ts", "../src/components/PreviewController.ts", "../src/mod.ts"],
  "sourcesContent": ["import {\n    Quote,\n    Bold,\n    Italic,\n    Strikethrough,\n    Link,\n    Heading,\n    Heading2,\n    Check,\n    Scissors,\n    X,\n    Eye,\n    createElement,\n    RotateCcw\n} from 'lucide';\n\n/**\n * Collection of icon components used in the editor\n */\nconst usedIcons = {\n    Quote,\n    Bold,\n    Italic,\n    Strikethrough,\n    Link,\n    Heading,\n    Heading2,\n    Check,\n    Scissors,\n    X,\n    Eye,\n    RotateCcw\n}\n\n/**\n * Converts Lucide icon components to HTML strings\n */\nexport const Icons = Object.fromEntries(\n    Object.entries(usedIcons).map(([k, v]) => {\n        const elt = createElement(v);\n        elt.classList.add('lucide-icon');\n        return [k, elt.outerHTML] as [string, string];\n    })\n) as Record<keyof typeof usedIcons, string>;", "import { Icons } from \"./icons.ts\";\n\n/**\n * Gets a DOM element from a string selector or returns the passed element\n * @param root - A CSS selector or element reference\n * @returns The found HTMLElement\n */\nexport const getRootElt = (root: string | HTMLElement): HTMLElement => {\n    if (typeof root === 'string') {\n        const tmp = document.querySelector(root) as HTMLElement;\n        if (tmp === null) throw new Error('root div not found while initialising editor');\n        return tmp;\n    }\n    return root;\n}\n\n/**\n * Returns the HTML for an icon\n * @param name - Name of the icon to return\n * @returns RawHTML object for use with html`` templating\n */\nexport const icon = (name: keyof typeof Icons) => {\n    return { raw: true, contents: Icons[name] } as const;\n}\n\n/**\n * Creates a debounced version of a function\n * @param func - The function to debounce\n * @param delay - Delay in milliseconds\n * @returns Debounced function\n */\nexport function debounce(func: Function, delay: number | undefined) {\n    let timer: number;\n    return function (...args: any[]) {\n        clearTimeout(timer);\n        timer = window.setTimeout(() => {\n            func.apply(this, args);\n        }, delay || 0);\n    };\n}", "/**\n * Core editor module that implements the primary InkEditor functionality.\n * This module provides a rich-text markdown editor built on top of CodeMirror.\n */\n\nimport { EditorView } from \"@codemirror/view\";\nimport { debounce, getRootElt } from \"./utils/misc.ts\";\nimport cf, { ListStore, Store } from \"campfire.js\";\nimport {\n    KeybindString,\n    KEYBOARD_EVENT_KEYS,\n    VALID_KEYBIND_MODIFIERS,\n} from \"./KeybindString.ts\";\nimport {\n    createCmEditor,\n    getDocAndCursor,\n    insertAround,\n    insertBefore,\n    insertWithNewline,\n} from \"./utils/editor.ts\";\nimport type { ButtonArgs, ButtonSpec } from \"./components/EditorButton.ts\";\nimport { DEFAULT_ARGS, EDITOR_DEFAULT_ACTIONS } from \"./defaults.ts\";\nimport { SnippetView } from \"./components/SnippetView.ts\";\nimport { ToolbarButtons } from \"./components/Toolbar.ts\";\nimport { PreviewController } from \"./components/PreviewController.ts\";\n\n/**\n * Configuration options for the InkEditor instance\n * @interface InkOptions\n */\nexport interface InkOptions {\n    /**\n     * Controls toolbar visibility and configuration\n     * @type {boolean | {enable: boolean, defaults: boolean}}\n     */\n    toolbar: boolean | {\n        enable: boolean;\n        defaults: boolean;\n    };\n\n    /**\n     * Whether to enable default editor actions (bold, italic, etc.)\n     * @type {boolean}\n     */\n    enableDefaultActions: boolean;\n\n    /**\n     * Default content to populate the editor with\n     * @type {string}\n     */\n    defaultContents: string;\n\n    /**\n     * Whether to enable the snippets feature\n     * @type {boolean}\n     */\n    enableSnippets: boolean;\n\n    /**\n     * Font family for the editor content\n     * @type {string}\n     */\n    fontFamily: string;\n\n    /**\n     * Editor height (CSS value)\n     * @type {string}\n     */\n    height: string;\n\n    /**\n     * Placeholder text to display when editor is empty\n     * @type {string}\n     */\n    placeholder: string;\n\n    /**\n     * Array of snippet strings available for insertion\n     * @type {string[]}\n     */\n    snippets: string[];\n\n    /**\n     * Editor width (CSS value)\n     * @type {string}\n     */\n    width: string;\n\n    /**\n     * Callback for autosaving editor contents\n     * @param {string} contents - Current editor contents\n     * @returns {void | Promise<void>}\n     */\n    onAutosave: (contents: string) => void | Promise<void>;\n\n    /**\n     * Callback when editor task is completed\n     * @param {string} contents - Current editor contents\n     * @returns {void | Promise<void>}\n     */\n    onDone: (contents: string) => void | Promise<void>;\n\n    /**\n     * Callback when editor is exited\n     * @param {string} contents - Current editor contents\n     * @returns {void | Promise<void>}\n     */\n    onExit: (contents: string) => void | Promise<void>;\n\n    /**\n     * Function to generate preview HTML from editor contents\n     * @param {string} contents - Current editor contents\n     * @returns {string | Promise<string>} HTML preview content\n     */\n    makePreview: (contents: string) => string | Promise<string>;\n\n    /**\n     * Function to retrieve previously saved content\n     * @returns {string | Promise<string>} Saved content\n     */\n    retrieveSaved: () => string | Promise<string>;\n\n    /**\n     * Delay in milliseconds before triggering autosave\n     * @type {number}\n     */\n    autosaveDelayMs: number;\n\n    /**\n     * Key bindings to set up. Keybinds must be strings matching\n     * `/C?S?A?\\+KeyboardEvent['key']`. The editor warns if any\n     * invalid bindings or key names are passed.\n     */\n    keybinds?: Partial<Record<KeybindString, string>>;\n}\n\n/**\n * Arguments passed to editor action functions\n * @interface EditorActionArgs\n */\nexport interface EditorActionArgs {\n    /** Reference to the InkEditor instance */\n    editor: InkEditor;\n}\n\n/**\n * Type definition for editor action functions\n * @param {EditorActionArgs} args - Arguments containing editor reference\n * @returns {void | Promise<void>}\n */\nexport type EditorAction = (args: EditorActionArgs) => void | Promise<void>;\n\n/**\n * Main InkEditor class that provides a rich markdown editing experience\n * with toolbar buttons, snippets, and preview functionality.\n */\nexport class InkEditor {\n    /** Store for toolbar buttons */\n    #toolbar: ListStore<ButtonSpec> | undefined;\n\n    /** Map of registered editor actions by name */\n    #actions: Map<string, EditorAction>;\n\n    /** Root element for CodeMirror editor */\n    #cmRoot: HTMLElement;\n\n    /** Parent element containing the editor */\n    parent: HTMLElement;\n\n    /** The underlying CodeMirror editor instance */\n    editor: EditorView;\n\n    /** Whether editor is in compact mode */\n    isCompact: boolean;\n\n    /** Store controlling snippet panel visibility */\n    snippetsOpen: Store<boolean> | undefined;\n\n    /** Editor configuration options */\n    options: InkOptions;\n\n    keybinds = new Map<KeybindString, string>();\n\n    /** Preview state and controls */\n    preview: {\n        /** Store for preview content */\n        contents: Store<string>;\n        /** Store controlling preview visibility */\n        visibility: Store<boolean>;\n    };\n\n    /** Function to toggle read-only state */\n    setReadOnly: (state: boolean) => void;\n\n    /**\n     * Creates a new InkEditor instance\n     * @param {HTMLElement | string} root - Container element or selector for the editor\n     * @param {Partial<InkOptions>} [userOptions] - Custom editor options\n     */\n    constructor(root: HTMLElement | string, userOptions?: Partial<InkOptions>) {\n        this.options = Object.assign({}, DEFAULT_ARGS, userOptions);\n        this.parent = getRootElt(root);\n\n        this.parent.classList.add(\"ink-root\");\n        this.isCompact = this.parent.classList.contains(\"compact\");\n        const [_, snippets, ctrls, preview, cmRoot] = cf.nu(this.parent)\n            .gimme(\n                \".ink-snippets\",\n                \".ink-ctrl-btns\",\n                \".ink-preview\",\n                \".ink-editor\",\n            )\n            .html`\n            <div class=ink-editor-wrapper>\n                <div class=\"ink-ctrl-btns\"></div>\n                <div class=\"ink-preview\"></div>\n                <div class=\"ink-snippets\"></div>\n                <div class=\"ink-editor\"></div>\n            </div>\n            `\n            .style(\"width\", this.options.width)\n            .style(\"height\", this.options.height)\n            .done();\n        this.#cmRoot = cmRoot;\n\n        this.preview = PreviewController(preview, this.options.makePreview);\n        this.#actions = new Map();\n\n        if (!this.options.toolbar) ctrls.remove();\n        else this.#toolbar = ToolbarButtons(ctrls, this, this.options.toolbar);\n\n        if (!this.options.enableSnippets) snippets.remove();\n        else {this.snippetsOpen = SnippetView(\n                snippets,\n                this,\n                this.options.snippets,\n            );}\n\n        if (this.options.enableDefaultActions) {\n            Object.entries(EDITOR_DEFAULT_ACTIONS).forEach(\n                ([k, v]) => this.registerAction(k, v),\n            );\n        }\n\n        if (this.options.keybinds) {\n            console.log(this.options.keybinds);\n            Object.entries(this.options.keybinds || {})\n                .forEach(([binding, action]: [KeybindString, string]) => {\n                    this.registerKeybind(binding, action);\n                });\n\n            this.setupKeybindListener();\n        }\n\n        const { view, setReadOnly } = createCmEditor({\n            placeholder: this.options.placeholder,\n            onAutosave: debounce(\n                this.options.onAutosave,\n                this.options.autosaveDelayMs,\n            ),\n            parent: cmRoot,\n            fontFamily: this.options.fontFamily,\n        });\n\n        this.editor = view;\n        this.setReadOnly = setReadOnly;\n\n        this.initialize();\n    }\n\n    /**\n     * Initializes the editor with saved or default content\n     * @returns {Promise<void>}\n     */\n    async initialize(): Promise<void> {\n        const saved = await this.options.retrieveSaved();\n        if (saved) {\n            this.setContents(saved);\n        } else {\n            this.setContents(this.options.defaultContents);\n        }\n    }\n\n    static isMacOS(): boolean {\n        // 1. Browser frontend\n        if (typeof navigator !== \"undefined\") {\n            if (\n                navigator.maxTouchPoints &&\n                navigator.maxTouchPoints > 1\n            ) return false;\n\n            const uaPlatform =\n                (navigator.userAgentData && navigator.userAgentData.platform) ||\n                navigator.platform || \"\";\n\n            return uaPlatform.toLowerCase().includes(\"mac\");\n        }\n\n        // @ts-ignore this is fine\n        if (typeof process !== \"undefined\" && process.platform) {\n            // @ts-ignore this is fine\n            return process.platform === \"darwin\";\n        }\n\n        // 3. Unknown or sandboxed \u2014 default to false\n        return false;\n    }\n\n    static isCtrlDown(e: KeyboardEvent) {\n        return InkEditor.isMacOS() ? e.metaKey : e.ctrlKey;\n    }\n\n    static KEYBIND_RE = /(C)?(S)?(A)?\\+(\\w+)/;\n\n    setupKeybindListener() {\n        globalThis.addEventListener(\"keydown\", (e) => {\n            const binding = [];\n            if (InkEditor.isCtrlDown(e)) binding.push(\"C\");\n            if (e.altKey) binding.push(\"A\");\n            if (e.shiftKey) binding.push(\"S\");\n            binding.push(\"+\");\n            binding.push(e.key);\n            const built = binding.join(\"\");\n\n            if ([\"Control\", \"Meta\", \"Alt\", \"Option\"].includes(e.key)) return;\n\n            if (\n                !(InkEditor.isKeybindString(built) && this.keybinds.has(built))\n            ) {\n                console.log(\"not preventing default\");\n                return;\n            }\n\n            console.log(330, { binding, built, e });\n            e.preventDefault();\n            const action = this.keybinds.get(built);\n            if (action) return this.action(action);\n        });\n    }\n\n    /**\n     * Executes a registered editor action by name\n     * @param {string} name - Name of the action to execute\n     */\n    action(name: string) {\n        const action = this.#actions.get(name);\n        if (!action) {\n            console.warn(\"Action\", name, \"called, but no such action exists.\");\n            return;\n        }\n\n        action({ editor: this });\n    }\n\n    /**\n     * Registers a new button in the toolbar\n     * @param {ButtonArgs} btn - Button configuration\n     */\n    registerButton(btn: ButtonArgs) {\n        this.#toolbar?.push(btn);\n    }\n\n    /**\n     * Registers a new editor action\n     * @param {string} name - Unique name for the action\n     * @param {EditorAction} action - Function to execute when action is triggered\n     */\n    registerAction(name: string, action: EditorAction) {\n        this.#actions.set(name, action);\n    }\n\n    /**\n     * Removes a registered action\n     * @param {string} name - Name of the action to remove\n     */\n    deregisterAction(name: string) {\n        this.#actions.delete(name);\n    }\n\n    /**\n     * Provides methods for inserting content at various positions in the editor\n     */\n    get insert() {\n        return {\n            /**\n             * Inserts text before the current cursor position\n             * @param {string} insertion - Text to insert\n             * @param {number} [cursorOffset=insertion.length] - Where to place cursor after insertion\n             */\n            before: (\n                insertion: string,\n                cursorOffset: number = insertion.length,\n            ) => {\n                const { cursor } = getDocAndCursor(this.editor);\n                insertBefore(this.editor, cursor!, insertion, cursorOffset);\n            },\n\n            /**\n             * Wraps selected text with start and end strings\n             * @param {string} start - Text to insert before selection\n             * @param {string} [end=start] - Text to insert after selection (defaults to start)\n             */\n            around: (start: string, end: string = start) => {\n                const { cursor } = getDocAndCursor(this.editor);\n                insertAround(this.editor, cursor!, start, end);\n            },\n\n            /**\n             * Inserts text at the current cursor position\n             * @param {string} str - Text to insert\n             */\n            at: (str: string) => {\n                const { cursor } = getDocAndCursor(this.editor);\n                this.editor.dispatch({\n                    changes: {\n                        from: cursor!,\n                        to: cursor!,\n                        insert: str,\n                    },\n                });\n            },\n\n            /**\n             * Inserts text with proper newline handling\n             * @param {string} text - Text to insert\n             */\n            withNewline: (text: string) => insertWithNewline(this.editor, text),\n        };\n    }\n\n    /**\n     * Gets the current editor contents as a string\n     * @returns {string} Current editor contents\n     */\n    getContents(): string {\n        return this.editor.state.doc.toString();\n    }\n\n    /**\n     * Sets the editor content\n     * @param {string} contents - New content to set\n     */\n    setContents(contents: string) {\n        this.editor.dispatch({\n            changes: {\n                from: 0,\n                to: this.editor.state.doc.length,\n                insert: contents,\n            },\n        });\n    }\n\n    /**\n     * Shows or hides the editor\n     * @param {boolean} state - Whether editor should be visible\n     */\n    setEditorVisibility(state: boolean) {\n        this.#cmRoot.classList.toggle(\"hidden\", !state);\n    }\n\n    static isKeybindString(binding: string): binding is KeybindString {\n        const [mod, key] = binding.split(\"+\");\n        if (!mod || !key) return false;\n\n        return VALID_KEYBIND_MODIFIERS.includes(mod as any) &&\n            KEYBOARD_EVENT_KEYS.includes(key as any);\n    }\n\n    registerKeybind(binding: KeybindString, action: string) {\n        const err = (s: string) => console.warn(s);\n\n        if (!InkEditor.isKeybindString(binding)) {\n            return err(\n                `Tried to register invalid keybind \"${binding}\", dropping...`,\n            );\n        }\n\n        if (!this.#actions.has(action)) {\n            return err(\n                `Tried to register invalid action \"${action}\", dropping...`,\n            );\n        }\n\n        this.keybinds.set(binding, action);\n    }\n\n    /**\n     * Disables all toolbar buttons except one\n     * @param {number} target - Index of button to keep enabled\n     */\n    disableButtonsExcept(target: number) {\n        this.#toolbar?.forEach((btn, idx) => {\n            if (idx === target) return;\n            this.#toolbar?.set(idx, { ...btn, disabled: true });\n        });\n    }\n\n    /**\n     * Enables all toolbar buttons\n     */\n    enableButtons() {\n        this.#toolbar?.forEach((btn, idx) => {\n            this.#toolbar?.set(idx, { ...btn, disabled: false });\n        });\n    }\n}\n", "export const KEYBOARD_EVENT_KEYS = [\n    \"Unidentified\",\n    \"Alt\",\n    \"AltGraph\",\n    \"CapsLock\",\n    \"Control\",\n    \"Fn\",\n    \"FnLock\",\n    \"Hyper\",\n    \"Meta\",\n    \"NumLock\",\n    \"ScrollLock\",\n    \"Shift\",\n    \"Super\",\n    \"Symbol\",\n    \"SymbolLock\",\n    \"Enter\",\n    \"Tab\",\n    \" \",\n    \"ArrowDown\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"ArrowUp\",\n    \"End\",\n    \"Home\",\n    \"PageDown\",\n    \"PageUp\",\n    \"Backspace\",\n    \"Clear\",\n    \"Copy\",\n    \"CrSel\",\n    \"Cut\",\n    \"Delete\",\n    \"EraseEof\",\n    \"ExSel\",\n    \"Insert\",\n    \"Paste\",\n    \"Redo\",\n    \"Undo\",\n    \"Accept\",\n    \"Again\",\n    \"Attn\",\n    \"Cancel\",\n    \"ContextMenu\",\n    \"Escape\",\n    \"Execute\",\n    \"Find\",\n    \"Finish\",\n    \"Help\",\n    \"Pause\",\n    \"Play\",\n    \"Props\",\n    \"Select\",\n    \"ZoomIn\",\n    \"ZoomOut\",\n    \"BrightnessDown\",\n    \"BrightnessUp\",\n    \"Eject\",\n    \"LogOff\",\n    \"Power\",\n    \"PowerOff\",\n    \"PrintScreen\",\n    \"Hibernate\",\n    \"Standby\",\n    \"WakeUp\",\n    \"AllCandidates\",\n    \"Alphanumeric\",\n    \"CodeInput\",\n    \"Compose\",\n    \"Convert\",\n    \"Dead\",\n    \"FinalMode\",\n    \"GroupFirst\",\n    \"GroupLast\",\n    \"GroupNext\",\n    \"GroupPrevious\",\n    \"ModeChange\",\n    \"NextCandidate\",\n    \"NonConvert\",\n    \"PreviousCandidate\",\n    \"Process\",\n    \"SingleCandidate\",\n    \"HangulMode\",\n    \"HanjaMode\",\n    \"JunjaMode\",\n    \"Eisu\",\n    \"Hankaku\",\n    \"Hiragana\",\n    \"HiraganaKatakana\",\n    \"KanaMode\",\n    \"KanjiMode\",\n    \"Katakana\",\n    \"Romaji\",\n    \"Zenkaku\",\n    \"ZenkakuHankaku\",\n    \"F1\",\n    \"F2\",\n    \"F3\",\n    \"F4\",\n    \"F5\",\n    \"F6\",\n    \"F7\",\n    \"F8\",\n    \"F9\",\n    \"F10\",\n    \"F11\",\n    \"F12\",\n    \"F13\",\n    \"F14\",\n    \"F15\",\n    \"F16\",\n    \"F17\",\n    \"F18\",\n    \"F19\",\n    \"F20\",\n    \"Soft1\",\n    \"Soft2\",\n    \"Soft3\",\n    \"Soft4\",\n    \"AppSwitch\",\n    \"Call\",\n    \"Camera\",\n    \"CameraFocus\",\n    \"EndCall\",\n    \"GoBack\",\n    \"GoHome\",\n    \"HeadsetHook\",\n    \"LastNumberRedial\",\n    \"Notification\",\n    \"MannerMode\",\n    \"VoiceDial\",\n    \"ChannelDown\",\n    \"ChannelUp\",\n    \"MediaFastForward\",\n    \"MediaPause\",\n    \"MediaPlay\",\n    \"MediaPlayPause\",\n    \"MediaRecord\",\n    \"MediaRewind\",\n    \"MediaStop\",\n    \"MediaTrackNext\",\n    \"MediaTrackPrevious\",\n    \"AudioBalanceLeft\",\n    \"AudioBalanceRight\",\n    \"AudioBassDown\",\n    \"AudioBassBoostDown\",\n    \"AudioBassBoostToggle\",\n    \"AudioBassBoostUp\",\n    \"AudioBassUp\",\n    \"AudioFaderFront\",\n    \"AudioFaderRear\",\n    \"AudioSurroundModeNext\",\n    \"AudioTrebleDown\",\n    \"AudioTrebleUp\",\n    \"AudioVolumeDown [1]\",\n    \"AudioVolumeMute [1]\",\n    \"AudioVolumeUp [1]\",\n    \"MicrophoneToggle\",\n    \"MicrophoneVolumeDown\",\n    \"MicrophoneVolumeMute\",\n    \"MicrophoneVolumeUp\",\n    \"TV\",\n    \"TV3DMode\",\n    \"TVAntennaCable\",\n    \"TVAudioDescription\",\n    \"TVAudioDescriptionMixDown\",\n    \"TVAudioDescriptionMixUp\",\n    \"TVContentsMenu\",\n    \"TVDataService\",\n    \"TVInput\",\n    \"TVInputComponent1\",\n    \"TVInputComponent2\",\n    \"TVInputComposite1\",\n    \"TVInputComposite2\",\n    \"TVInputHDMI1\",\n    \"TVInputHDMI2\",\n    \"TVInputHDMI3\",\n    \"TVInputHDMI4\",\n    \"TVInputVGA1\",\n    \"TVMediaContext\",\n    \"TVNetwork\",\n    \"TVNumberEntry\",\n    \"TVPower\",\n    \"TVRadioService\",\n    \"TVSatellite\",\n    \"TVSatelliteBS\",\n    \"TVSatelliteCS\",\n    \"TVSatelliteToggle\",\n    \"TVTerrestrialAnalog\",\n    \"TVTerrestrialDigital\",\n    \"TVTimer\",\n    \"AVRInput\",\n    \"AVRPower\",\n    \"ColorF0Red\",\n    \"ColorF1Green\",\n    \"ColorF2Yellow\",\n    \"ColorF3Blue\",\n    \"ColorF4Grey\",\n    \"ColorF5Brown\",\n    \"ClosedCaptionToggle\",\n    \"Dimmer\",\n    \"DisplaySwap\",\n    \"DVR\",\n    \"Exit\",\n    \"FavoriteClear0\",\n    \"FavoriteClear1\",\n    \"FavoriteClear2\",\n    \"FavoriteClear3\",\n    \"FavoriteRecall0\",\n    \"FavoriteRecall1\",\n    \"FavoriteRecall2\",\n    \"FavoriteRecall3\",\n    \"FavoriteStore0\",\n    \"FavoriteStore1\",\n    \"FavoriteStore2\",\n    \"FavoriteStore3\",\n    \"Guide\",\n    \"GuideNextDay\",\n    \"GuidePreviousDay\",\n    \"Info\",\n    \"InstantReplay\",\n    \"Link\",\n    \"ListProgram\",\n    \"LiveContent\",\n    \"Lock\",\n    \"MediaApps\",\n    \"MediaAudioTrack\",\n    \"MediaLast\",\n    \"MediaSkipBackward\",\n    \"MediaSkipForward\",\n    \"MediaStepBackward\",\n    \"MediaStepForward\",\n    \"MediaTopMenu\",\n    \"NavigateIn\",\n    \"NavigateNext\",\n    \"NavigateOut\",\n    \"NavigatePrevious\",\n    \"NextFavoriteChannel\",\n    \"NextUserProfile\",\n    \"OnDemand\",\n    \"Pairing\",\n    \"PinPDown\",\n    \"PinPMove\",\n    \"PinPToggle\",\n    \"PinPUp\",\n    \"PlaySpeedDown\",\n    \"PlaySpeedReset\",\n    \"PlaySpeedUp\",\n    \"RandomToggle\",\n    \"RcLowBattery\",\n    \"RecordSpeedNext\",\n    \"RfBypass\",\n    \"ScanChannelsToggle\",\n    \"ScreenModeNext\",\n    \"Settings\",\n    \"SplitScreenToggle\",\n    \"STBInput\",\n    \"STBPower\",\n    \"Subtitle\",\n    \"Teletext\",\n    \"VideoModeNext\",\n    \"Wink\",\n    \"ZoomToggle\",\n    \"SpeechCorrectionList\",\n    \"SpeechInputToggle\",\n    \"Close\",\n    \"New\",\n    \"Open\",\n    \"Print\",\n    \"Save\",\n    \"SpellCheck\",\n    \"MailForward\",\n    \"MailReply\",\n    \"MailSend\",\n    \"LaunchCalculator\",\n    \"LaunchCalendar\",\n    \"LaunchContacts\",\n    \"LaunchMail\",\n    \"LaunchMediaPlayer\",\n    \"LaunchMusicPlayer\",\n    \"LaunchMyComputer\",\n    \"LaunchPhone\",\n    \"LaunchScreenSaver\",\n    \"LaunchSpreadsheet\",\n    \"LaunchWebBrowser\",\n    \"LaunchWebCam\",\n    \"LaunchWordProcessor\",\n    \"LaunchApplication1\",\n    \"LaunchApplication2\",\n    \"LaunchApplication3\",\n    \"LaunchApplication4\",\n    \"LaunchApplication5\",\n    \"LaunchApplication6\",\n    \"LaunchApplication7\",\n    \"LaunchApplication8\",\n    \"LaunchApplication9\",\n    \"LaunchApplication10\",\n    \"LaunchApplication11\",\n    \"LaunchApplication12\",\n    \"LaunchApplication13\",\n    \"LaunchApplication14\",\n    \"LaunchApplication15\",\n    \"LaunchApplication16\",\n    \"BrowserBack\",\n    \"BrowserFavorites\",\n    \"BrowserForward\",\n    \"BrowserHome\",\n    \"BrowserRefresh\",\n    \"BrowserSearch\",\n    \"BrowserStop\",\n    \"Decimal\",\n    \"Key11\",\n    \"Key12\",\n    \"Multiply\",\n    \"Add\",\n    \"Clear\",\n    \"Divide\",\n    \"Subtract\",\n    \"Separator\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n] as const;\nexport type KeyboardEventKey = typeof KEYBOARD_EVENT_KEYS[number];\n\nexport const VALID_KEYBIND_MODIFIERS = [\n    \"C\",\n    \"S\",\n    \"A\",\n    \"AS\",\n    \"CS\",\n    \"CA\",\n    \"CSA\",\n] as const;\nexport type KeybindModifier = typeof VALID_KEYBIND_MODIFIERS[number];\n\nexport type KeybindString = `${KeybindModifier}+${KeyboardEventKey}`;\n\nexport const splitBinding = (b: KeybindString) => {\n    const [mod, key] = b.split(\"+\") as [KeybindModifier, KeyboardEventKey];\n    return [mod, key] as const;\n};\n", "import { EditorView, keymap, placeholder } from \"@codemirror/view\";\nimport {\n    defaultHighlightStyle,\n    syntaxHighlighting,\n} from \"@codemirror/language\";\nimport { Compartment, EditorState } from \"@codemirror/state\";\nimport { markdown, markdownLanguage } from \"@codemirror/lang-markdown\";\nimport type { InkOptions } from \"../InkEditor.ts\";\nimport {\n    defaultKeymap,\n    history,\n    historyKeymap,\n    indentWithTab,\n} from \"@codemirror/commands\";\nimport { tags } from \"@lezer/highlight\";\nimport { HighlightStyle } from \"@codemirror/language\";\n\nexport const getDocAndCursor = (editor: EditorView) => ({\n    doc: editor.state.doc,\n    cursor: editor.state.selection.main.head,\n});\n\nexport const posToOffset = (\n    e: EditorView,\n    pos: { line: number; ch: number },\n) => {\n    const doc = e.state.doc;\n    return doc.line(pos.line + 1).from + pos.ch;\n};\n\nexport const offsetToPos = (e: EditorView, offset: number) => {\n    const doc = e.state.doc;\n    let line = doc.lineAt(offset);\n    return { line: line.number - 1, ch: offset - line.from };\n};\n\nexport const getLineOffset = (editor: EditorView, offset: number) => {\n    const p = offsetToPos(editor, offset);\n    p.ch = 0;\n    const newOffset = posToOffset(editor, p);\n    return newOffset;\n};\n\nexport const hasSelection = (editor: EditorView) =>\n    editor.state.selection.ranges.some((r) => !r.empty);\n\nexport const insertBefore = (\n    editor: EditorView,\n    cursor: number,\n    insertion: string,\n    cursorOffset = insertion.length,\n) => {\n    if (!hasSelection(editor)) {\n        const offset = getLineOffset(editor, cursor);\n        editor.dispatch({\n            changes: { from: offset, to: offset, insert: insertion },\n        });\n        editor.dispatch({\n            selection: { anchor: offset + (cursorOffset || 0) },\n        });\n        return;\n    }\n\n    editor.state.selection.ranges.forEach((selection) => {\n        [selection.head, selection.anchor].toSorted().forEach((pos, i) => {\n            const offset = getLineOffset(editor, i);\n            editor.dispatch({\n                changes: { from: offset, to: offset, insert: insertion },\n            });\n\n            if (i == 0) {\n                const selection = {\n                    anchor: posToOffset(editor, {\n                        line: pos,\n                        ch: cursorOffset || 0,\n                    }),\n                };\n                editor.dispatch({ selection });\n            }\n        });\n    });\n};\n\nexport const insertAround = (\n    editor: EditorView,\n    cursor: number,\n    start: string,\n    end = start,\n) => {\n    if (hasSelection(editor)) {\n        const selection = editor.state.sliceDoc(\n            editor.state.selection.main.from,\n            editor.state.selection.main.to,\n        );\n        editor.dispatch(editor.state.replaceSelection(start + selection + end));\n    } else {\n        editor.dispatch({\n            changes: {\n                from: cursor,\n                to: cursor,\n                insert: start + end,\n            },\n        });\n        editor.dispatch({\n            selection: {\n                anchor: editor.state.selection.main.head + start.length,\n            },\n        });\n    }\n\n    editor.focus();\n};\n\nexport const insertWithNewline = (editor: EditorView, text: string) => {\n    const { doc, cursor } = getDocAndCursor(editor);\n    const pos = offsetToPos(editor, cursor!);\n    pos.ch = doc.lineAt(cursor!).length;\n    const newPos = posToOffset(editor, pos);\n    editor.dispatch({\n        changes: { from: newPos, to: newPos, insert: `\\n${text}` },\n    });\n};\n\ninterface CmEditorOptions {\n    placeholder: string;\n    onAutosave: InkOptions[\"onAutosave\"];\n    fontFamily: string;\n    parent: HTMLElement;\n}\n\nconst theme = (fontFamily: string) =>\n    EditorView.theme({\n        \"&\": {\n            fontSize: \"1rem\",\n            color: \"black\",\n            height: \"100%\",\n            overflow: \"auto\",\n            backgroundColor: \"white\",\n        },\n        \".cm-content\": {\n            fontFamily,\n        },\n    });\n\nconst headingStyles = HighlightStyle.define([\n    {\n        tag: tags.heading1,\n        color: \"black\",\n        fontSize: \"1.75rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.heading2,\n        color: \"black\",\n        fontSize: \"1.6rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.heading3,\n        color: \"black\",\n        fontSize: \"1.5rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.heading4,\n        color: \"black\",\n        fontSize: \"1.4rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.heading5,\n        color: \"black\",\n        fontSize: \"1.2rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.heading6,\n        color: \"black\",\n        fontSize: \"1.1rem\",\n        fontWeight: \"700\",\n    },\n    {\n        tag: tags.meta,\n        color: \"#aaa !important\",\n    },\n].map((itm) => ({ ...itm, textDecoration: \"none !important\" })));\n\nexport const getExtensions = (\n    ph: string,\n    autosave: InkOptions[\"onAutosave\"],\n    fontFamily: string,\n) => [\n    history(),\n    keymap.of([\n        ...defaultKeymap,\n        ...historyKeymap,\n        indentWithTab,\n    ]),\n    markdown({ base: markdownLanguage }),\n    syntaxHighlighting(defaultHighlightStyle),\n    syntaxHighlighting(headingStyles),\n    placeholder(ph),\n    EditorView.updateListener.of(async (u) =>\n        await autosave(u.state.doc.toString())\n    ),\n    EditorView.lineWrapping,\n    theme(fontFamily),\n];\n\nexport const createCmEditor = (\n    { placeholder, onAutosave, fontFamily, parent }: CmEditorOptions,\n) => {\n    const compartments = {\n        readOnly: new Compartment(),\n    };\n\n    const setReadOnly = (state: boolean) => {\n        view.dispatch({\n            effects: compartments.readOnly.reconfigure(\n                EditorState.readOnly.of(state),\n            ),\n        });\n    };\n\n    const view = new EditorView({\n        extensions: [\n            compartments.readOnly.of(EditorState.readOnly.of(false)),\n            ...getExtensions(placeholder, onAutosave, fontFamily),\n        ],\n        parent,\n    });\n\n    return { view, setReadOnly };\n};\n", "import type { EditorAction, InkOptions } from \"./InkEditor.ts\";\nimport type { ButtonSpec } from \"./components/EditorButton.ts\";\n\nexport const DEFAULT_ARGS: InkOptions = {\n    toolbar: true,\n    enableDefaultActions: true,\n    defaultContents: \"\",\n    enableSnippets: false,\n    fontFamily: \"monospace\",\n    height: \"100svh\",\n    width: \"100svw\",\n    snippets: [],\n    onAutosave: (contents) => {\n        localStorage.setItem(\"ink-contents\", contents);\n        console.debug(\"autosaving...\");\n    },\n    onDone: (_) => {},\n    onExit: (_) => {},\n    retrieveSaved: () => localStorage.getItem(\"ink-contents\") || \"\",\n    makePreview: (c) => c,\n    autosaveDelayMs: 1000,\n    placeholder: \"Welcome to Ink!\",\n};\n\nexport const EDITOR_DEFAULT_ACTIONS: Record<string, EditorAction> = {\n    \"bold\": ({ editor }) => editor.insert.around(\"**\"),\n    \"italic\": ({ editor }) => editor.insert.around(\"_\"),\n    \"strikethrough\": ({ editor }) => editor.insert.around(\"~~\"),\n    \"quote\": ({ editor }) => editor.insert.before(\"> \"),\n    \"a\": ({ editor }) => editor.insert.at(\"[Link text](Link url)\"),\n    \"h1\": ({ editor }) => editor.insert.before(\"# \", 2),\n    \"h2\": ({ editor }) => editor.insert.before(\"## \", 3),\n    \"h3\": ({ editor }) => editor.insert.before(\"### \", 4),\n    \"h4\": ({ editor }) => editor.insert.before(\"#### \", 5),\n    \"h5\": ({ editor }) => editor.insert.before(\"##### \", 6),\n    \"h6\": ({ editor }) => editor.insert.before(\"###### \", 7),\n    \"snippetmenu\": ({ editor }) =>\n        Promise.resolve(editor.snippetsOpen?.update(true) as any),\n    \"done\": ({ editor }) => editor.options.onDone(editor.getContents()),\n    \"exit\": ({ editor }) => editor.options.onExit(editor.getContents()),\n    \"toggle_preview\": ({ editor }) => {\n        const vis = editor.preview.visibility.update((n) => !n);\n        /* value is flipped now so we have to work with negating the old value */\n        if (!vis) editor.preview.contents.update(editor.getContents());\n        editor.setEditorVisibility(!!vis);\n    },\n    \"reset\": ({ editor }) => {\n        editor.setContents(editor.options.defaultContents);\n    },\n};\n\nexport const EDITOR_DEFAULT_BUTTONS: Array<ButtonSpec> = [\n    {\n        action: \"bold\",\n        iconName: \"Bold\",\n        label: \"Bold\",\n        description: \"Make text bold\",\n    },\n    {\n        action: \"italic\",\n        iconName: \"Italic\",\n        label: \"Italic\",\n        description: \"Make text italic\",\n    },\n    {\n        action: \"strikethrough\",\n        iconName: \"Strikethrough\",\n        label: \"Strikethrough\",\n        description: \"Add strikethrough to text\",\n    },\n    {\n        action: \"quote\",\n        iconName: \"Quote\",\n        label: \"Quote\",\n        description: \"Insert a blockquote\",\n    },\n    {\n        action: \"a\",\n        iconName: \"Link\",\n        label: \"Link\",\n        description: \"Insert a hyperlink\",\n    },\n    {\n        action: \"h1\",\n        iconName: \"Heading\",\n        label: \"Heading 1\",\n        description: \"Insert a level 1 heading\",\n    },\n    {\n        action: \"h2\",\n        iconName: \"Heading2\",\n        label: \"Heading 2\",\n        description: \"Insert a level 2 heading\",\n    },\n    {\n        action: \"snippetmenu\",\n        iconName: \"Scissors\",\n        label: \"Snippets\",\n        description: \"Open snippets menu\",\n    },\n    {\n        action: \"reset\",\n        iconName: \"RotateCcw\",\n        description: \"Reset to default contents\",\n        label: \"Default\",\n    },\n    {\n        \"action\": \"toggle_preview\",\n        iconName: \"Eye\",\n        label: \"Preview\",\n        description: \"Toggle preview mode\",\n        toggle: true,\n        modal: true,\n    },\n    {\n        \"action\": \"done\",\n        iconName: \"Check\",\n        label: \"Done\",\n        description: \"Finish editing and apply changes\",\n    },\n    {\n        \"action\": \"exit\",\n        iconName: \"X\",\n        label: \"Exit\",\n        description: \"Exit editor without applying changes\",\n    },\n];\n", "import cf from \"campfire.js\";\nimport { icon } from \"../utils/misc.ts\";\nimport { InkEditor } from \"../InkEditor.ts\";\n\nexport const SnippetView = (\n    parent: HTMLElement,\n    editor: InkEditor,\n    snippets: string[],\n) => {\n    const visibility = cf.store({ value: false });\n\n    visibility.on(\"update\", (event) => {\n        parent.classList.toggle(\"hidden\", !event.value);\n    });\n\n    const handleInteraction = (target: HTMLElement) => {\n        if (target.classList.contains(\"snippet-item\")) {\n            editor.insert.withNewline(target.innerHTML);\n        } else if (target.closest(\".snippets-close\")) {\n            visibility.update(false);\n        }\n    };\n\n    const snippetList = snippets.map((snippet) =>\n        cf.html`<div class=\"snippet-item\" tabindex=\"0\">${snippet}</div>`\n    ).join(\"\");\n\n    cf.nu(parent)\n        .html`<div class='snippets-content'>\n            <div class='snippets-header'>\n                <div class='snippets-title'><strong>Snippets</strong></div>\n                <div class='snippets-close' tabindex=\"0\">${icon(\"X\")}</div>\n            </div>\n            <div class='snippets-body'>\n                <div class='snippets-list'>\n                    ${cf.r(snippetList)}\n                </div>\n            </div>\n        </div>`\n        .on(\"click\", (e) => handleInteraction(e.target as HTMLElement))\n        .on(\"keyup\", (e) => {\n            if (e.key === \"Enter\") {\n                handleInteraction(e.target as HTMLElement);\n            }\n        })\n        .done();\n\n    return visibility;\n};\n", "import cf from \"campfire.js\";\nimport { EDITOR_DEFAULT_BUTTONS } from \"../defaults.ts\";\nimport { InkOptions } from \"../InkEditor.ts\";\nimport { InkEditor } from \"../mod.ts\";\nimport { ButtonSpec, EditorButton } from \"./EditorButton.ts\";\n\nexport const ToolbarButtons = (container: HTMLElement, editor: InkEditor, settings: InkOptions['toolbar']) => {\n    const store = cf.store<ButtonSpec>({ type: \"list\" });\n\n    store.on(\"append\", ({ value, idx }) => {\n        cf.insert(EditorButton({ ...value, idx, editor, showLabel: !editor.isCompact }),\n            { into: container });\n    });\n\n    store.on(\"change\", ({ value, idx }) => {\n        const elt = container.querySelector(`button[data-btn-idx=\"${idx}\"]`) as HTMLElement;\n        if (elt) {\n            elt.toggleAttribute('disabled', !!value.disabled);\n        }\n    });\n\n    store.on(\"deletion\", ({ idx }) => {\n        const button = container.querySelector(`button[data-btn-idx=\"${idx}\"]`);\n        if (button) {\n            cf.rm(button);\n        }\n    });\n\n    if (typeof settings === 'object' && !settings.defaults) {\n        return store;\n    }\n\n    EDITOR_DEFAULT_BUTTONS.forEach(btn => store.push(btn));\n\n    return store;\n}", "import cf from 'campfire.js';\nimport { InkEditor } from '../mod.ts';\nimport { icon } from '../utils/misc.ts';\nimport { Icons } from '../utils/icons.ts';\n\nexport interface ButtonArgs {\n    editor: InkEditor,\n    iconName: keyof typeof Icons,\n    action: string,\n    label: string,\n    showLabel?: boolean,\n    idx: number,\n    description: string,\n    toggle?: boolean,\n    modal?: boolean,\n    disabled?: boolean\n}\n\nexport type ButtonSpec = Omit<ButtonArgs, 'editor' | 'showLabel' | 'idx'>;\n\nexport const EditorButton = ({ modal, toggle, editor, iconName, action, description, label, showLabel, idx, disabled }: ButtonArgs) => {\n    let toggleState = false;\n\n    const [elt] = cf.nu(\"button.ink-button\")\n        .attr(\"data-ink-action\", action)\n        .attr(\"title\", description)\n        .attr(\"data-btn-idx\", idx.toString())\n        .html(cf.html`${icon(iconName)}<span>${showLabel ? `${label}` : ''}</span>`)\n        .on(\"click\", (e) => {\n            editor.action(action);\n            if (!toggle) return;\n            toggleState = !toggleState;\n            elt.classList.toggle('toggled', toggleState);\n            modal ? editor.disableButtonsExcept(idx) : editor.enableButtons();\n        })\n        .done();\n\n    if (disabled) elt.setAttribute('disabled', '');\n\n    return [elt];\n}", "import cf from \"campfire.js\";\nimport { message } from \"cf-alert\";\n\nexport const PreviewController = (\n    root: HTMLElement,\n    parse: (contents: string) => string | Promise<string>,\n) => {\n    const contents = cf.store({ value: \"\" });\n    const visibility = cf.store({ value: false });\n\n    visibility.on(\"change\", (event) => {\n        root.classList.toggle(\"hidden\", !event.value);\n    });\n\n    const onEditorChange = (str: string) =>\n        cf.callbackify(() => {\n            const parsed = parse(str);\n            return typeof parsed === \"string\"\n                ? Promise.resolve(parsed)\n                : parsed;\n        });\n\n    contents.on(\"change\", (event) => {\n        onEditorChange(event.value)((err, res) => {\n            if (err) return message(`Error loading preview: ${err}`);\n            return cf.nu(root)\n                .html`<div class='ink-preview-wrapper'>${cf.r(res)}</div>`\n                .done();\n        });\n    });\n\n    return { contents, visibility };\n};\n", "import { InkEditor } from './InkEditor.ts';\nexport { InkEditor };\nexport default { InkEditor };\n"],
  "mappings": "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",
  "names": ["cf", "selection", "placeholder", "cf", "cf", "cf", "cf", "cf", "cf"]
}
